[{"path":"https://geobosh.github.io/gbutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Georgi N. Boshnakov. Author, maintainer.","code":""},{"path":"https://geobosh.github.io/gbutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Boshnakov GN (2022). gbutils: Utilities Simulation, Plots, Quantile Functions Programming. https://github.com/GeoBosh/gbutils (devel), https://geobosh.github.io/gbutils/ (website).","code":"@Manual{,   title = {gbutils: Utilities for Simulation, Plots, Quantile Functions and Programming},   author = {Georgi N. Boshnakov},   year = {2022},   note = {https://github.com/GeoBosh/gbutils (devel), https://geobosh.github.io/gbutils/ (website)}, }"},{"path":"https://geobosh.github.io/gbutils/index.html","id":"installing-gbutils","dir":"","previous_headings":"","what":"Utilities for Simulation, Plots, Quantile Functions and Programming","title":"Utilities for Simulation, Plots, Quantile Functions and Programming","text":"latest stable version CRAN. can install development version gbutils Github:","code":"install.packages(\"gbutils\") library(devtools) install_github(\"GeoBosh/gbutils\")"},{"path":"https://geobosh.github.io/gbutils/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Utilities for Simulation, Plots, Quantile Functions and Programming","text":"Package gbutils collection (mostly small) functions used interactively packages.","code":""},{"path":"https://geobosh.github.io/gbutils/index.html","id":"numeric-computations","dir":"","previous_headings":"","what":"Numeric computations","title":"Utilities for Simulation, Plots, Quantile Functions and Programming","text":"sim_numbers(), sim_complex(), sim_real() - Simulate real complex numbers (possibly partial) polar form specifications. cdf2quantile() - Compute quantiles given distribution function. pseudoInverse() - Compute pseudo-inverse matrices. rpoly() - create polynomials real coefficients zeroes (roots) given Cartesian polar form.","code":""},{"path":"https://geobosh.github.io/gbutils/index.html","id":"graphics","dir":"","previous_headings":"","what":"Graphics","title":"Utilities for Simulation, Plots, Quantile Functions and Programming","text":"plotpdf() - Plot functions automatic determination “interesting” region (typically probability density distribution functions)","code":""},{"path":"https://geobosh.github.io/gbutils/index.html","id":"s4-classes","dir":"","previous_headings":"","what":"S4 classes","title":"Utilities for Simulation, Plots, Quantile Functions and Programming","text":"adjacencyOfClasses() - Create inheritance graphs S4 classes defined one packages.","code":""},{"path":"https://geobosh.github.io/gbutils/index.html","id":"programming-utilities","dir":"","previous_headings":"","what":"Programming utilities","title":"Utilities for Simulation, Plots, Quantile Functions and Programming","text":"isNA() - object NA? isargunnamed() - element list named? missing_arg() - element pairlist missing? parse_text() - Parse expressions. nposargs() - Count number positional arguments used call. shiftleft() shiftright() - Rotate vectors.","code":""},{"path":"https://geobosh.github.io/gbutils/index.html","id":"other","dir":"","previous_headings":"","what":"Other","title":"Utilities for Simulation, Plots, Quantile Functions and Programming","text":"mintersect() - Set intersection arbitrary number arguments. myouter() - Outer product using non-vectorised function. raw_history() Get command history character vector.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/adjacencyOfClasses.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjacency graph of classes in packages — adjacencyOfClasses","title":"Adjacency graph of classes in packages — adjacencyOfClasses","text":"Get inheritance graph classes one packages.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/adjacencyOfClasses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjacency graph of classes in packages — adjacencyOfClasses","text":"","code":"adjacencyOfClasses(packages, externalSubclasses = FALSE,                     result = c(\"default\", \"matrixOfPairs\", \"adjacencyMatrix\"),                     Wolfram = FALSE)"},{"path":"https://geobosh.github.io/gbutils/reference/adjacencyOfClasses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjacency graph of classes in packages — adjacencyOfClasses","text":"packages names one packages, character vector externalSubclasses TRUE, exclude subtrees classes defined     packages listed argument packages. result format result, can missing one     \"default\", \"matrixOfPairs\", \"adjacencyMatrix\",     see Details. Wolfram TRUE, print suitable graph expression run     Mathematica, see Details.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/adjacencyOfClasses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjacency graph of classes in packages — adjacencyOfClasses","text":"adjacencyOfClasses computes graph representation   dependencies S4 classes defined one packages (  specified argument package) returns list.    contents list returned adjacencyOfClasses depend   argument result.  Partial matching used value   argument result, e.g., \"adj\" equivalent   \"adjacencyMatrix\". externalSubclasses = FALSE, default, subclasses defined   outside requested packages excluded. typically   user looking . get complete tree, set   externalSubclasses TRUE. S4 classes represented vertices graph.   Component \"vertices\" result gives character   vector. References \\(\\)th class vertex   correspond order vector. attempt made arrange   vertices particular order. empty list returned   vector empty. result missing \"default\", edges   graph represented character vector.  edge represented   string arrow \"->\" superclass   subclass. example shows package defines one   class, subclass \"list\":  illustrates effect argument \"externalSubclasses\":  edge, \"vector -> list\" omitted previous example since   relationship defined elsewhere. resulted class   \"vector\" dropped also vertices, since   defined \"gbutils\" none remaining edges contains   . result \"matrixOfPairs\", edges   graph represented character matrix two columns, row    represents edge element first column element   second. example one edge, matrix   contains one row:  result \"adjacencyMatrix\", adjacency matrix   graph component \"\" returned list. Element \\((,j)\\)   matrix equal one, \\(j\\)th class superclass   \\(\\)th. words, \\(j\\)th column gives   superclasses \\(\\)th class. element position   (1,2) non-zero, \"list\" superclass \"objectPad\":  Note including vertices result redundant, since   may edge. can happen class   superclasses subclasses. described result converted graph object   can fed functions provided number R packages. additional option use argument Wolfram.    Wolfram TRUE, suitable Mathematica command   printed. can evaluated Mathematica session (e.g.,   copy/paste) produce graphical representation graph /  manipulated . feature side effect,   return value adjacencyOfClasses controlled   arguments. example, return value without   argument \"Wolfram\" , addition, printed line defines   Wolfram language graph terms vertices edges:  Setting result = \"adjacencyMatrix\" last R command   exports graph terms adjacency matrix:","code":"adjacencyOfClasses(\"gbutils\") ##: $vertices ##: [1] \"objectPad\" \"list\"     ##: $edges ##: [1] \"list -> objectPad\" adjacencyOfClasses(\"gbutils\", externalSubclasses = TRUE) ##: $vertices ##: [1] \"objectPad\" \"list\"      \"vector\"   ##: $edges ##: [1] \"list -> objectPad\" \"vector -> list\" adjacencyOfClasses(\"gbutils\", result = \"matrixOfPairs\") ##: $vertices ##: [1] \"objectPad\" \"list\"     ##: $edges ##:      [,1]   [,2]        ##: [1,] \"list\" \"objectPad\" adjacencyOfClasses(\"gbutils\", result = \"adjacencyMatrix\") ##: $vertices ##: [1] \"objectPad\" \"list\"     ##: $AM ##:           objectPad list ##: objectPad         0    1 ##: list              0    0 adjacencyOfClasses(\"gbutils\", Wolfram = TRUE) ##: Graph[{objectPad,list}, {list -> objectPad}, VertexLabels -> Automatic] ##: $vertices ##: [1] \"objectPad\" \"list\"     ##: $edges ##: [1] \"list -> objectPad\" adjacencyOfClasses(\"gbutils\", Wolfram = TRUE, result = \"adjacencyMatrix\") ##: AdjacencyGraph[{objectPad,list}, {{0, 0}, ##: {1, 0} } ##: , VertexLabels -> Automatic] ##: $vertices ##: [1] \"objectPad\" \"list\"     ##: $AM ##:           objectPad list ##: objectPad         0    1 ##: list              0    0"},{"path":"https://geobosh.github.io/gbutils/reference/adjacencyOfClasses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjacency graph of classes in packages — adjacencyOfClasses","text":"list following components (described Details): vertices character vector S4 class names, edges edges graph, format controlled     argument results (present result equal       \"adjacencyMatrix\"), adjacency matrix graph (present     result \"adjacencyMatrix\").","code":""},{"path":"https://geobosh.github.io/gbutils/reference/adjacencyOfClasses.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Adjacency graph of classes in packages — adjacencyOfClasses","text":"Gentleman R, Whalen E, Huber W, Falcon S (2017). graph: package handle graph data structures. R package version 1.56.0. Hansen KD, Gentry J, Long L, Gentleman R, Falcon S, Hahne F, Sarkar D (2017). Rgraphviz: Provides plotting capabilities R graph objects. R package version 2.22.0. Maechler M (2015). classGraph: Construct Graphs S4 Class Hierarchies. (partly based code Robert Gentleman) R package version 0.7-5, https://CRAN.R-project.org/package=classGraph.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/adjacencyOfClasses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adjacency graph of classes in packages — adjacencyOfClasses","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/gbutils/reference/adjacencyOfClasses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjacency graph of classes in packages — adjacencyOfClasses","text":"","code":"adjacencyOfClasses(\"gbutils\") #> $vertices #> [1] \"objectPad\" \"list\"      #>  #> $edges #> [1] \"list -> objectPad\" #>  adjacencyOfClasses(\"gbutils\", TRUE) #> $vertices #> [1] \"objectPad\" \"list\"      \"vector\"    #>  #> $edges #> [1] \"list -> objectPad\" \"vector -> list\"    #>   adjacencyOfClasses(\"gbutils\", FALSE, \"matrixOfPairs\") #> $vertices #> [1] \"objectPad\" \"list\"      #>  #> $edges #>      [,1]   [,2]        #> [1,] \"list\" \"objectPad\" #>  adjacencyOfClasses(\"gbutils\", TRUE,  \"matrixOfPairs\") #> $vertices #> [1] \"objectPad\" \"list\"      \"vector\"    #>  #> $edges #>      [,1]     [,2]        #> [1,] \"list\"   \"objectPad\" #> [2,] \"vector\" \"list\"      #>   adjacencyOfClasses(\"gbutils\", FALSE, \"adjacencyMatrix\") #> $vertices #> [1] \"objectPad\" \"list\"      #>  #> $AM #>           objectPad list #> objectPad         0    1 #> list              0    0 #>  adjacencyOfClasses(\"gbutils\", TRUE,  \"adjacencyMatrix\") #> $vertices #> [1] \"objectPad\" \"list\"      \"vector\"    #>  #> $AM #>           objectPad list vector #> objectPad         0    1      0 #> list              0    0      1 #> vector            0    0      0 #>   ## as above, also represent the graph using the edges adjacencyOfClasses(\"gbutils\", Wolfram = TRUE) #> Graph[{objectPad,list}, {list -> objectPad}, VertexLabels -> Automatic]  #>  #> $vertices #> [1] \"objectPad\" \"list\"      #>  #> $edges #> [1] \"list -> objectPad\" #>  adjacencyOfClasses(\"gbutils\", TRUE, Wolfram = TRUE) #> Graph[{objectPad,list,vector}, {list -> objectPad, vector -> list}, VertexLabels -> Automatic]  #>  #> $vertices #> [1] \"objectPad\" \"list\"      \"vector\"    #>  #> $edges #> [1] \"list -> objectPad\" \"vector -> list\"    #>   ## here the graph is represented by the adjacency matrix:  adjacencyOfClasses(\"gbutils\", FALSE, \"adjacencyMatrix\", Wolfram = TRUE) #> AdjacencyGraph[{objectPad,list}, {{0, 0}, #> {1, 0} } #> , VertexLabels -> Automatic]  #>  #> $vertices #> [1] \"objectPad\" \"list\"      #>  #> $AM #>           objectPad list #> objectPad         0    1 #> list              0    0 #>  adjacencyOfClasses(\"gbutils\", TRUE,  \"adjacencyMatrix\", Wolfram = TRUE) #> AdjacencyGraph[{objectPad,list,vector}, {{0, 0, 0}, #> {1, 0, 0}, #> {0, 1, 0} } #> , VertexLabels -> Automatic]  #>  #> $vertices #> [1] \"objectPad\" \"list\"      \"vector\"    #>  #> $AM #>           objectPad list vector #> objectPad         0    1      0 #> list              0    0      1 #> vector            0    0      0 #>   if(requireNamespace(\"graph\", quietly = TRUE) &&    requireNamespace(\"Rgraphviz\", quietly = TRUE)) withAutoprint({     ## another package     adjacencyOfClasses(\"graph\")     ac1 <- adjacencyOfClasses(\"graph\", FALSE, \"adjacencyMatrix\")     ## note the use of t() below     gr_ac1 <- graph::graphAM(adjMat = t(ac1$AM), edgemode = \"directed\")     if(require(\"Rgraphviz\", quietly = TRUE, warn.conflicts = FALSE))         plot(gr_ac1)     ## more than one package     ac2 <- adjacencyOfClasses(c(\"graph\", \"Rgraphviz\"), FALSE, \"adjacencyMatrix\")     gr_ac2 <- graph::graphAM(adjMat = t(ac2$AM), edgemode = \"directed\")     if(require(\"Rgraphviz\", quietly = TRUE))         plot(gr_ac2) }) #> > adjacencyOfClasses(\"graph\") #> $vertices #>  [1] \"attrPos\"      \"edgeSet\"      \"graphBase\"    \"renderInfo\"   \"MGEdgeSet\"    #>  [6] \"MultiGraph\"   \"UEdgeSet\"     \"simpleEdge\"   \"graphAM\"      \"graphBAM\"     #> [11] \"clusterGraph\" \"attrData\"     \"multiGraph\"   \"distGraph\"    \"edgeSetAM\"    #> [16] \"DiEdgeSet\"    \"edgeSetNEL\"   \"graphNEL\"     \"graph\"        #>  #> $edges #>  [1] \"edgeSet -> edgeSetNEL\"   \"edgeSet -> edgeSetAM\"    #>  [3] \"graphBase -> graph\"      \"graphBase -> MultiGraph\" #>  [5] \"graph -> graphNEL\"       \"graph -> graphAM\"        #>  [7] \"graph -> distGraph\"      \"graph -> clusterGraph\"   #>  [9] \"graph -> graphBAM\"       \"MGEdgeSet -> DiEdgeSet\"  #> [11] \"MGEdgeSet -> UEdgeSet\"   #>  #> > ac1 <- adjacencyOfClasses(\"graph\", FALSE, \"adjacencyMatrix\") #> > gr_ac1 <- graph::graphAM(adjMat = t(ac1$AM), edgemode = \"directed\") #> > if (require(\"Rgraphviz\", quietly = TRUE, warn.conflicts = FALSE)) plot(gr_ac1) #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min  #> > ac2 <- adjacencyOfClasses(c(\"graph\", \"Rgraphviz\"), FALSE, \"adjacencyMatrix\") #> > gr_ac2 <- graph::graphAM(adjMat = t(ac2$AM), edgemode = \"directed\") #> > if (require(\"Rgraphviz\", quietly = TRUE)) plot(gr_ac2)"},{"path":"https://geobosh.github.io/gbutils/reference/cdf2quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a quantile from a distribution function — cdf2quantile","title":"Calculate a quantile from a distribution function — cdf2quantile","text":"Numerically calculate quantile distribution function.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/cdf2quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a quantile from a distribution function — cdf2quantile","text":"","code":"cdf2quantile(p, cdf, interval = c(-3, 3), lower = min(interval),       upper = max(interval), ...)"},{"path":"https://geobosh.github.io/gbutils/reference/cdf2quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a quantile from a distribution function — cdf2quantile","text":"p number interval (0,1). cdf cumulative distribution function, function. interval interval look root, see Details. lower lower end point interval. upper upper end point interval. ... arguments passed root finding     function cdf, see Details.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/cdf2quantile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate a quantile from a distribution function — cdf2quantile","text":"quantile, \\(q\\), computed numerically solution   equation \\(cdf(q)-p=0\\). Function uniroot used find root.  request higher   precision, set argument tol.  arguments ...   passed cdf. uniroot needs interval look root.   default one, extended automatically   contain quantile. assumes argument cdf   increasing function (). override default interval, use argument interval (  vector two numbers) lower /upper. may   necessary support distribution whole real   line cdf cope values outside support   distribution.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/cdf2quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a quantile from a distribution function — cdf2quantile","text":"computed quantile number.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/cdf2quantile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate a quantile from a distribution function — cdf2quantile","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/gbutils/reference/cdf2quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a quantile from a distribution function — cdf2quantile","text":"","code":"cdf2quantile(0.95, pnorm) #> [1] 1.644851 cdf2quantile(0.05, pexp)   # support [0,Inf) is no problem for #> [1] 0.05129361 cdf2quantile(0.05, plnorm) # for built-in distributions. #> [1] 0.1930405  ## default predicision is about 4 digits after decimal point cdf2quantile(0.95, pnorm, mean = 3, sd = 1) #> [1] 4.644829 cdf2quantile(0.05, pnorm, mean = 3, sd = 1) #> [1] 1.355143 qnorm(c(0.95, 0.05), mean = 3, sd = 1) #> [1] 4.644854 1.355146  ## request a higher precision: cdf2quantile(0.05, pnorm, mean = 3, sd = 1, tol = 1e-8) #> [1] 1.355146 cdf2quantile(0.05, pnorm, mean = 3, sd = 1, tol = 1e-12) #> [1] 1.355146  ## see also examples for plotpdf()"},{"path":"https://geobosh.github.io/gbutils/reference/isNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is NA — isNA","title":"Check if an object is NA — isNA","text":"Check object NA. Always return TRUE FALSE, logical   vector length one.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/isNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is NA — isNA","text":"","code":"isNA(x)"},{"path":"https://geobosh.github.io/gbutils/reference/isNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is NA — isNA","text":"x R object.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/isNA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if an object is NA — isNA","text":"isNA returns TRUE argument single NA, .e.   atomic, length one, represents NA value. case   isNA returns FALSE. isNA suitable use conditional constructs since   always returns single value never NA. Note identical() distinguishes different types NA,   .e. identical(x, NA) TRUE x NA (logical).","code":""},{"path":"https://geobosh.github.io/gbutils/reference/isNA.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check if an object is NA — isNA","text":"requirement x atomic means   isNA(list(NA)) gives FALSE. comparison, .na(list(NA)) gives TRUE.    holds classed lists, .na(structure(list(NA), class   = \"myclass\")).","code":""},{"path":"https://geobosh.github.io/gbutils/reference/isNA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is NA — isNA","text":"TRUE FALSE","code":""},{"path":"https://geobosh.github.io/gbutils/reference/isNA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if an object is NA — isNA","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/gbutils/reference/isNA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if an object is NA — isNA","text":"","code":"v <- c(1, NA, 3) isNA(v[2]) # TRUE #> [1] TRUE  ## a vector of two or more Na's is not isNA isNA(rep(NA,3)) # FALSE #> [1] FALSE  ## a list containing NA is not isNA isNA(list(NA)) # FALSE #> [1] FALSE ## ... but is.na(list(NA))  # TRUE #> [1] TRUE  ## identical() distinguishes different types of NA: class(v) # \"numeric\", not \"integer\" #> [1] \"numeric\"  identical(v[2], NA)          # FALSE, NA on its own is \"logical\" #> [1] FALSE identical(v[2], NA_integer_) # FALSE #> [1] FALSE identical(v[2], NA_real_)    # TRUE #> [1] TRUE   vi <- c(1L, NA_integer_, 3L) isNA(vi[2]) # TRUE #> [1] TRUE  class(vi) # \"integer\" #> [1] \"integer\" identical(vi[2], NA_integer_) # TRUE #> [1] TRUE identical(vi[2], NA_real_)    # FALSE #> [1] FALSE  ## is.na(NULL) would give a warning isNA(NULL) # FALSE #> [1] FALSE  ## a length zero object is not NA, so isNA() returns FALSE: isNA(logical(0)) # FALSE #> [1] FALSE  ## is.na() has a different remit and returns a 0-length vector: is.na(logical(0))  # logical(0) #> logical(0)"},{"path":"https://geobosh.github.io/gbutils/reference/isargunnamed.html","id":null,"dir":"Reference","previous_headings":"","what":"Is an element of a list named? — isargunnamed","title":"Is an element of a list named? — isargunnamed","text":"Check component list named.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/isargunnamed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is an element of a list named? — isargunnamed","text":"","code":"isargunnamed(x, k)"},{"path":"https://geobosh.github.io/gbutils/reference/isargunnamed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is an element of a list named? — isargunnamed","text":"x list. k integer, specifies position x.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/isargunnamed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is an element of a list named? — isargunnamed","text":"isargunnamed(x,k) returns TRUE k-th component   x named FALSE otherwise. Argument x typically list arguments used call   function, one obtained list(...)   body function definition. k positive, isargunnamed returns FALSE.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/isargunnamed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is an element of a list named? — isargunnamed","text":"TRUE FALSE","code":""},{"path":"https://geobosh.github.io/gbutils/reference/isargunnamed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Is an element of a list named? — isargunnamed","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/gbutils/reference/isargunnamed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is an element of a list named? — isargunnamed","text":"","code":"li1 <- list(a=1, 2, 3) isargunnamed(li1, 1) #> [1] FALSE isargunnamed(li1, 2) #> [1] TRUE  ## wholly unnamed list li2 <- list(1, 2, 3) isargunnamed(li2, 1) #> [1] TRUE isargunnamed(li2, 2) #> [1] TRUE  ## using in a function definition f1 <- function(...){     dots <- list(...)     for(i in seq(along=dots))         cat(i, isargunnamed(dots, i), \"\\n\") }  f1(1) #> 1 TRUE  f1(a = 3, 4, c = 5) #> 1 FALSE  #> 2 TRUE  #> 3 FALSE  f1(x = \"a\", y = \"b\") #> 1 FALSE  #> 2 FALSE"},{"path":"https://geobosh.github.io/gbutils/reference/mintersect.html","id":null,"dir":"Reference","previous_headings":"","what":"Set intersection of arbitrary number of arguments — mintersect","title":"Set intersection of arbitrary number of arguments — mintersect","text":"Set intersection arbitrary number arguments.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/mintersect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set intersection of arbitrary number of arguments — mintersect","text":"","code":"mintersect(...)"},{"path":"https://geobosh.github.io/gbutils/reference/mintersect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set intersection of arbitrary number of arguments — mintersect","text":"... arguments intersected, vectors mode,     see intersect.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/mintersect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set intersection of arbitrary number of arguments — mintersect","text":"base R function intersect binary   operation. mintersect works positive number   arguments. called one argument, mintersect returns .   unlike intersect gives error case. Calling mintersect arguments error (  intercect).","code":""},{"path":"https://geobosh.github.io/gbutils/reference/mintersect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set intersection of arbitrary number of arguments — mintersect","text":"vector representing intersection arguments","code":""},{"path":"https://geobosh.github.io/gbutils/reference/mintersect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set intersection of arbitrary number of arguments — mintersect","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/gbutils/reference/mintersect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set intersection of arbitrary number of arguments — mintersect","text":"","code":"mintersect(1:20, 3:18, 7:12) #> [1]  7  8  9 10 11 12 mintersect(letters[1:20], letters[3:18], letters[7:12]) #> [1] \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" mintersect(1:4) #> [1] 1 2 3 4"},{"path":"https://geobosh.github.io/gbutils/reference/missing_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an element of a pairlist is missing — missing_arg","title":"Check if an element of a pairlist is missing — missing_arg","text":"Check element pairlist missing.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/missing_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an element of a pairlist is missing — missing_arg","text":"","code":"missing_arg(arg)"},{"path":"https://geobosh.github.io/gbutils/reference/missing_arg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an element of a pairlist is missing — missing_arg","text":"arg object test.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/missing_arg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if an element of a pairlist is missing — missing_arg","text":"argument passed missing_arg typically element   pairlist list produced alist(). missing_arg   returns TRUE missing FALSE otherwise. Objects type pairlist come R level almost exclusively   formal arguments functions. missing_arg can useful   manipulated programmatically.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/missing_arg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an element of a pairlist is missing — missing_arg","text":"TRUE FALSE","code":""},{"path":"https://geobosh.github.io/gbutils/reference/missing_arg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if an element of a pairlist is missing — missing_arg","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/gbutils/reference/missing_arg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if an element of a pairlist is missing — missing_arg","text":"","code":"lmargs <- formals(lm) class(lmargs) # pairlist #> [1] \"pairlist\" missing_arg(lmargs$data) #> [1] TRUE ## which arguments of lm() have no (explicit) defaults? sapply(lmargs, missing_arg) #>     formula        data      subset     weights   na.action      method  #>        TRUE        TRUE        TRUE        TRUE        TRUE       FALSE  #>       model           x           y          qr singular.ok   contrasts  #>       FALSE       FALSE       FALSE       FALSE       FALSE       FALSE  #>      offset         ...  #>        TRUE        TRUE   ## This gives an error: ## pairlist(x = 3, y = , z = 5)  ## an example with alist() pl2 <- alist(a = \"\", b = , c = 3) class(pl2) # list #> [1] \"list\" ## this shows that 'b' is missing, 'a' and 'c' are not: sapply(pl2, missing_arg) # FALSE  TRUE FALSE #>     a     b     c  #> FALSE  TRUE FALSE  ## superficially, 'b' is equal to the empty string: pl2[[2]] #>  sapply(pl2, function(x) x == \"\") # TRUE  TRUE FALSE #>     a     b     c  #>  TRUE  TRUE FALSE   ## with pairlist the results are the same: g <- function(a = \"\", b, c = 3) NULL a.g <- formals(g) class(a.g) # pairlist #> [1] \"pairlist\" sapply(a.g, missing_arg) # FALSE  TRUE FALSE #>     a     b     c  #> FALSE  TRUE FALSE  a.g[[2]] #>  sapply(a.g, function(x) x == \"\") # TRUE  TRUE FALSE #>     a     b     c  #>  TRUE  TRUE FALSE"},{"path":"https://geobosh.github.io/gbutils/reference/myouter.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for some basic operations — myouter","title":"Functions for some basic operations — myouter","text":"Small utility functions","code":""},{"path":"https://geobosh.github.io/gbutils/reference/myouter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for some basic operations — myouter","text":"","code":"myouter(x, y, fun) shiftleft(x, k = 1) shiftright(x, k = 1)"},{"path":"https://geobosh.github.io/gbutils/reference/myouter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for some basic operations — myouter","text":"x vector. y vector. k non-negative integer. fun function, see `Details'.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/myouter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for some basic operations — myouter","text":"myouter(x,y,fun) computes outer product x  y using function fun. result matrix  \\((,j)\\)th element equal fun(x[],y[j]).  required fun able work vector arguments. function  computations R using simple double loop. ,  convenience function, speed improving one. shiftright(x,k) rotates vector x k positions  right. shiftleft(x,k) rotates vector x k positions  left.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/myouter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for some basic operations — myouter","text":"myouter, matrix, described `Details'   shiftleft shiftright, vector","code":""},{"path":"https://geobosh.github.io/gbutils/reference/myouter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for some basic operations — myouter","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/gbutils/reference/nposargs.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to count the number of positional arguments used in a call — nposargs","title":"Function to count the number of positional arguments used in a call — nposargs","text":"Calculates number positional arguments used call.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/nposargs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to count the number of positional arguments used in a call — nposargs","text":"","code":"nposargs(x, a = FALSE)"},{"path":"https://geobosh.github.io/gbutils/reference/nposargs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to count the number of positional arguments used in a call — nposargs","text":"x call object, usually obtained sys.call(). [1] TRUE make correction distinguish     x[] x[], see details.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/nposargs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to count the number of positional arguments used in a call — nposargs","text":"nposargs mainly use body function definitions,   paricularly functions methods wish mimic behaviour   \"[\". nposargs gives number positional arguments used   call. also takes account empty arguments like used   expressions like x[1, ]. Optionally, makes particular correction peculiar   \"[\" - named arguments call count   arguments 2 [1]=TRUE, decreases count   one, .e. returns 1. distinguish x[]   x[] give 2 otherwise. forgotten details ,   roughly speaking, x[] becomes \"[\"(x,) x[] becomes \"[\"(x,),   .e. R puts comma x case.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/nposargs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to count the number of positional arguments used in a call — nposargs","text":"number positional arguments call","code":""},{"path":"https://geobosh.github.io/gbutils/reference/nposargs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to count the number of positional arguments used in a call — nposargs","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/gbutils/reference/nposargs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Function to count the number of positional arguments used in a call — nposargs","text":"wrote function (long time ago) use methods   \"[\". [1] typically obtained call missing()   somewhere beginning function. application put   results several calls vector, hence check   [1] rather , \"[\", may set   = c(missing(), missing(j), missing(k)).","code":""},{"path":"https://geobosh.github.io/gbutils/reference/nposargs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to count the number of positional arguments used in a call — nposargs","text":"","code":"f <- function(x,y,z,...){     call <- sys.call()     nposargs(call) } f(a,b,c)  # 3 #> [1] 3 f(a, , )  # 3 #> [1] 3 f(a,  )   # 2 #> [1] 2 f(a)      # 1 #> [1] 1 f(,  )    # 2 #> [1] 2 f(, a,  ) # 3 #> [1] 3 f()       # 0 #> [1] 0"},{"path":"https://geobosh.github.io/gbutils/reference/objectPad-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Objects class \"objectPad\" can used storage information.   methods storage retrieval.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/objectPad-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form new(\"objectPad\", ...).  Currently ... arguments ignored empty object created. Objects class \"objectPad\" user-level slots. Values stored retrieved function pad, former purpose using left-hand side assignment.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/objectPad-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":".Data: Object class \"list\", inherited \"list\".","code":""},{"path":"https://geobosh.github.io/gbutils/reference/objectPad-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class ","text":"Class \"list\", data part. Class \"vector\", class \"list\", distance 2.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/objectPad-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"initialize signature(.Object = \"objectPad\"): ... pad signature(x = \"objectPad\", item = \"missing\"): ... pad signature(x = \"objectPad\", item = \"\"): ... pad<- signature(x = \"objectPad\"): ...","code":""},{"path":"https://geobosh.github.io/gbutils/reference/objectPad-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Georgi Boshnakov","code":""},{"path":"https://geobosh.github.io/gbutils/reference/objectPad-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class ","text":"methods class set work directly objects   classes slot pad class objectPad.  Classes   may define additional methods function pad (  generic) adapt needs.","code":""},{"path":[]},{"path":"https://geobosh.github.io/gbutils/reference/objectPad-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"# create a pad and store some info. pa <- new(\"objectPad\") pad(pa,\"apple\") <- \"fruit\" pad(pa,\"sweets\") <- \"sweets\" # pad(pa,\"apple\",\"dentist\") <- \"keeps away from her/him\" # pad(pa,\"sweets\",\"dentist\") <- \"helps meeting her/him\" pad(pa,\"young Gauss\") <- 100*(100+1)/2 pad(pa,\"layman\") <- sum(1:100)  pad(pa,\"apple\") #> [1] \"fruit\" pad(pa,\"sweets\") #> [1] \"sweets\" # pad(pa,\"apple\",\"dentist\") # pad(pa,\"sweets\",\"dentist\") pad(pa,\"young Gauss\") - pad(pa,\"layman\") #> [1] 0  # create a class of vectors with a pad setClass(\"vecWithPad\",representation(x=\"numeric\",pad=\"objectPad\")) a <- new(\"vecWithPad\",x=1:10) pad(a,\"mean\") <- mean(a@x)    # Compute and store the mean, and pad(a,\"mean\")                 # retrieve it #> [1] 5.5"},{"path":"https://geobosh.github.io/gbutils/reference/pad-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Store and get data in pad objects — pad-methods","title":"Store and get data in pad objects — pad-methods","text":"Get store information pad.  pad can used   lefthand side assignment store information object   normal function call retrieve previously stored information.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/pad-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store and get data in pad objects — pad-methods","text":"","code":"pad(x, item) pad(x, item, ...) <- value"},{"path":"https://geobosh.github.io/gbutils/reference/pad-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store and get data in pad objects — pad-methods","text":"x object information stored. item item stored extracted. value value stored ... additional arguments (???  really possible? !!!)","code":""},{"path":"https://geobosh.github.io/gbutils/reference/pad-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Store and get data in pad objects — pad-methods","text":"generic function. methods x class   objectPad. generic works slot pad   x.  Currently check one. remove item use pad(x,item) <- NULL. , definition,   items may value NULL. padcheck checks item value returns   TRUE. Otherwise returns FALSE.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/pad-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store and get data in pad objects — pad-methods","text":"requested item.   item missing named list containing stored items.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/pad-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Store and get data in pad objects — pad-methods","text":"x = \"objectPad\", item = \"missing\" get items stored pad x, named list. x = \"objectPad\", item = \"\" get requested item pad x. x = \"\", item = \"missing\" get items stored pad x named list. x = \"\", item = \"\" get requested item pad x.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/pad-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Store and get data in pad objects — pad-methods","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/gbutils/reference/parse_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse expressions residing in character vectors — parse_text","title":"Parse expressions residing in character vectors — parse_text","text":"Parse expressions residing character vectors. Similar parse()   keeping source controlled argument rather   global options.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/parse_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse expressions residing in character vectors — parse_text","text":"","code":"parse_text(text, ..., keep = TRUE)"},{"path":"https://geobosh.github.io/gbutils/reference/parse_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse expressions residing in character vectors — parse_text","text":"text text parse, normally character vector can     anything parse accepts artgument. ... additional arguments passed parse. keep required setting option keep.source, see     details.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/parse_text.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse expressions residing in character vectors — parse_text","text":"like parse(text=text,...), except whether   source kept controlled argument keep,   options(\"keep.source\"). parse_text sets options(\"keep.source\") keep   (different) calling parse restores   afterwards.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/parse_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse expressions residing in character vectors — parse_text","text":"expression representing parsed text, see parse   details","code":""},{"path":"https://geobosh.github.io/gbutils/reference/parse_text.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parse expressions residing in character vectors — parse_text","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/gbutils/reference/parse_text.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Parse expressions residing in character vectors — parse_text","text":"usual setting option \"keep.source\" interactive sessions   TRUE. However, `R CMD check' FALSE. consequence, documentation package uses functions   depend option \"keep.source\" TRUE,   examples may run fine copied pasted R session   (rightly) fail `R CMD check'. oposite may also happen, documentation passes `R CMD   check' Sweave files successfully build examples   work copied pasted interactive session.","code":""},{"path":[]},{"path":"https://geobosh.github.io/gbutils/reference/plotpdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a probability denstity function — plotpdf","title":"Plot a probability denstity function — plotpdf","text":"Plot probability denstity function x-axis limits determined   quantiles distribution. Quantiles computed using quantile   function cumulative distribution function, whichever supplied.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/plotpdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a probability denstity function — plotpdf","text":"","code":"plotpdf(pdf, qdf, cdf, lq = 0.01, uq = 0.99, ...)"},{"path":"https://geobosh.github.io/gbutils/reference/plotpdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a probability denstity function — plotpdf","text":"pdf probability density plotted, function. qdf quantile function used computation quantiles,     function. cdf cumulative distribution function used computation quantiles,     function. argument used qdf given, see     `Details' section. lq lower quantile, used computation left limit. uq upper quantile, used computation right limit. ... additional arguments passed plot function.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/plotpdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a probability denstity function — plotpdf","text":"function plots pdf(x) interval (xmin,xmax)   xmin xmax lqth uqth quantiles,   respectively, distribution.  quantile function,   qdf, used, supplied. Otherwise quantiles computed   numerically cdf. Argument pdf required pdf, may   function. example, way choosing limits may   appropriate plot cdf, see examples. Similarly, qdf cdf need related pdf.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/plotpdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a probability denstity function — plotpdf","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/gbutils/reference/plotpdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a probability denstity function — plotpdf","text":"","code":"pdf1 <- function(x) dnorm(x, mean = 100, sd = 5) qdf1 <- function(x) qnorm(x, mean = 100, sd = 5) cdf1 <- function(x) pnorm(x, mean = 100, sd = 5)  plot(pdf1) # needs to specify 'from' and 'to' args for meaningful plot  plotpdf(pdf1, qdf1)                               # using quantile function  plotpdf(pdf1, cdf = cdf1)                         # using cdf  plotpdf(pdf1, cdf = cdf1, lq = 0.001, uq = 0.999) # ... and non-default quantiles   plotpdf(cdf1, cdf = cdf1, lq = 0.001, uq = 0.999) # plot a cdf    ## a mixture distribution: pf1 <- function(x){     0.25 * pnorm(x, mean = 3, sd = 0.2) + 0.75 * pnorm(x, mean = -1, sd = 0.5) } df1 <- function(x){     0.25 * dnorm(x, mean = 3, sd = 0.2) + 0.75 * dnorm(x, mean = -1, sd = 0.5) }  plotpdf(df1, cdf = pf1) # plot the pdf  plotpdf(pf1, cdf = pf1) # plot the cdf   c(cdf2quantile(0.05, pf1), cdf2quantile(0.95, pf1)) #> [1] -1.750551  3.168325"},{"path":"https://geobosh.github.io/gbutils/reference/pseudoInverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a pseudo-inverse matrix — pseudoInverse","title":"Compute a pseudo-inverse matrix — pseudoInverse","text":"Compute pseudo-inverse matrix using singular value   decomposition setting small singular values zero.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/pseudoInverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a pseudo-inverse matrix — pseudoInverse","text":"","code":"pseudoInverse(a, tol = 1e-07)"},{"path":"https://geobosh.github.io/gbutils/reference/pseudoInverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a pseudo-inverse matrix — pseudoInverse","text":"matrix tol number, threshold non-zero singular values.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/pseudoInverse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a pseudo-inverse matrix — pseudoInverse","text":"singular value decomposition computed singular   values smaller tol set zero. result formed   using standard formula.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/pseudoInverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a pseudo-inverse matrix — pseudoInverse","text":"matrix","code":""},{"path":"https://geobosh.github.io/gbutils/reference/pseudoInverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a pseudo-inverse matrix — pseudoInverse","text":"","code":"##---- Should be DIRECTLY executable !! ----"},{"path":"https://geobosh.github.io/gbutils/reference/raw_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the command history — raw_history","title":"Get the command history — raw_history","text":"Get command history.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/raw_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the command history — raw_history","text":"","code":"raw_history()"},{"path":"https://geobosh.github.io/gbutils/reference/raw_history.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the command history — raw_history","text":"command history saved temporary file   savehistory read back character vector.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/raw_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the command history — raw_history","text":"character vector","code":""},{"path":"https://geobosh.github.io/gbutils/reference/raw_history.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the command history — raw_history","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/gbutils/reference/raw_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the command history — raw_history","text":"","code":"if (FALSE) { hist <- raw_history() length(hist) }"},{"path":"https://geobosh.github.io/gbutils/reference/rpoly.html","id":null,"dir":"Reference","previous_headings":"","what":"Polynomial with real coefficients — rpoly","title":"Polynomial with real coefficients — rpoly","text":"Compute coefficients polynomial real coefficients, given   real zeroes (roots) one representative complex pair.   complex numbers given polar form, option   specify complex arguments multiples \\(\\pi\\).","code":""},{"path":"https://geobosh.github.io/gbutils/reference/rpoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polynomial with real coefficients — rpoly","text":"","code":"rpoly(x = numeric(0), arg = numeric(0), real = numeric(0), argpi = FALSE,       monic = TRUE)"},{"path":"https://geobosh.github.io/gbutils/reference/rpoly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polynomial with real coefficients — rpoly","text":"x complex, roots (including real ones), otherwise     moduli complex roots polynomial.  cases     one representative complex pair included.  arg complex arguments corresponding moduli x.     argument needed x complex.  real real roots polynomial. argument needed     x complex.  argpi TRUE, arg represents complex arguments     multiple \\(\\pi\\), see section ‘Details’. default     FALSE.  monic TRUE, default, coefficient highest term     polynomialis set 1. FALSE, constant term     one.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/rpoly.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Polynomial with real coefficients — rpoly","text":"complex zeroes polynomials real coefficients come   complex conjugated pairs. one representative pair   supplied rpoly. added   automatically. course, real roots supplied, . x complex, contain real roots one   representative comple pair. Otherise, x complex, contains moduli   numbers arg contains complex arguments. two   equal length. default FALSE argpi, k-th root   polynomial x[k]*cos(arg[k]) + *x[k]*sin(arg[k]).    argpi TRUE x[k]*cos(pi*arg[k]) + *x[k]*sin(pi*arg[k]). default, monic polinomial (coefficient highest order   term 1) created monic FALSE,   constant term polynomial set 1 . options argpi = TRUE /monic = FALSE   convenient applications, e.g., time series analysis   digital signal processing.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/rpoly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polynomial with real coefficients — rpoly","text":"real vector containing coefficients polynomial.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/rpoly.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Polynomial with real coefficients — rpoly","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/gbutils/reference/rpoly.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Polynomial with real coefficients — rpoly","text":"argpi TRUE, \\(\\cos(\\pi )\\) computed using   cospi(). may differ slightly equivalent   result obtained argpi = FALSE b = pi*,   computed  cos(b) = cos(pi*), see example.","code":""},{"path":[]},{"path":"https://geobosh.github.io/gbutils/reference/rpoly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polynomial with real coefficients — rpoly","text":"","code":"## z-1 rpoly(real = 1) #> [1] -1  1  ## roots 1, i, -i;  p3(z) = (z-1)(z-i)(z+i) p3 <- rpoly(c(1, 1i)) p3 #> [1] -1  1 -1  1 polyroot(p3) #> [1] 0+1i 0-1i 1+0i  ## using polar for the complex roots (i = e^(i pi/2)) p3a <- rpoly(1, pi/2, real = 1) p3a #> [1] -1  1 -1  1 ## mathematically, p3a is the same as p3 ## but the numerical calculation here gives a slight discrepancy p3a == p3 #> [1]  TRUE FALSE FALSE  TRUE p3a - p3 #> [1]  0.000000e+00  2.220446e-16 -2.220446e-16  0.000000e+00  ## using argpi = TRUE is somewhat more precise: p3b <- rpoly(1, 1/2, real = 1, argpi = TRUE) p3b #> [1] -1  1 -1  1 p3b == p3 #> [1] TRUE TRUE TRUE TRUE p3b - p3 #> [1] 0 0 0 0 ## indeed, in this case the results for p3b and p3 are identical: identical(p3b, p3) #> [1] TRUE  ## two ways to expand (z - 2*exp(i*pi/4))(z - 2*exp(-i*pi/4)) rpoly(2, pi/4) #> [1]  4.000000 -2.828427  1.000000 rpoly(2, 1/4, argpi = TRUE) #> [1]  4.000000 -2.828427  1.000000  ## set the constant term to 1; can be used, say, for AR models rpoly(2, pi/4, monic = FALSE) #> [1]  1.0000000 -0.7071068  0.2500000 rpoly(2, 1/4, argpi = TRUE, monic = FALSE) #> [1]  1.0000000 -0.7071068  0.2500000"},{"path":"https://geobosh.github.io/gbutils/reference/sim_complex.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate real or complex numbers using polar form — sim_complex","title":"Simulate real or complex numbers using polar form — sim_complex","text":"Simulate complex numbers given distributions modulus   argument real numbers given distributions absolute   value sign. values may partially fully   specified.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/sim_complex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate real or complex numbers using polar form — sim_complex","text":"","code":"sim_complex(abs, arg, absgen = \"runif\", absarg = list(0, 1),                       arggen = runif, argarg = list(-pi, pi), ...)  sim_real(abs, sign, signprob = 0.5, absgen = \"runif\",                                     absarg = list(0, 1), ...)"},{"path":"https://geobosh.github.io/gbutils/reference/sim_complex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate real or complex numbers using polar form — sim_complex","text":"abs vector absolute values. sign vector signs (1 -1). signprob probability positive sign. arg vector arguments (complex numbers). absgen generator absolute values, function     character string naming function. absarg arguments absgen. arggen generator arguments complex numbers,     function string naming function. argarg arguments arggen. ... used, simplifies call sim_numbers.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/sim_complex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate real or complex numbers using polar form — sim_complex","text":"sim_real simulates real numbers simulating separately   absolute values signs.  sim_complex simulates complex   numbers simulating separately moduli arguments. functions replace NA's argument abs values   simulated function specified absgen. Arguments   absgen specified (possibly named) list   absarg. Similarly, sim_complex replaces NA's argument   arg values simulated according arggen   argarg. , sim_real replaces NA's argument sign   random sample ones minus ones, probability   positive value signprob. NA entries abs, arg sign   filled simulated values, remaining entries left   unchanged. means (even ) values may   specified partially completely. abs combined arg sign create   result. arguments expected matching shape   length enforced usual recycling rules   apply case (recommended rely ). default range (complex) argument (-pi,pi).","code":""},{"path":"https://geobosh.github.io/gbutils/reference/sim_complex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate real or complex numbers using polar form — sim_complex","text":"sim_real, vector real numbers   sim_complex, vector complex numbers","code":""},{"path":"https://geobosh.github.io/gbutils/reference/sim_complex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate real or complex numbers using polar form — sim_complex","text":"Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/gbutils/reference/sim_complex.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simulate real or complex numbers using polar form — sim_complex","text":"Currently shape result sim_real   argument abs. sim_complex always returns   vector. Probably inconsistency removed.","code":""},{"path":[]},{"path":"https://geobosh.github.io/gbutils/reference/sim_complex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate real or complex numbers using polar form — sim_complex","text":"","code":"## x[1] is fixed to 1, x[2] is negative with random magnitude: x <- sim_real(c(1,NA,NA,NA), c(1, -1, NA, NA))  ## z[1] fixed to 1, the remaining elements of z ## have random magnitude and fixed arguments: z <- sim_complex(c(1,NA,NA,NA), c(0, pi/2, pi, -pi/2))  ## without restrictions sim_complex(rep(NA,4)) #> [1]  0.42485660-0.24618182i -0.87239484+0.09526974i  0.69978525+0.48416962i #> [4]  0.09129004+0.01391573i sim_real(rep(NA,4)) #> [1]  0.49418879 -0.28557976  0.36660481  0.04953101  ## moduli unrestricted; arguments restricted sim_complex(rep(NA,4), c(0, pi/2, pi, -pi/2)) #> [1]  0.1110371+0.0000000i  0.0000000+0.9102087i -0.1928631+0.0000000i #> [4]  0.0000000-0.9631110i"},{"path":"https://geobosh.github.io/gbutils/reference/sim_numbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation based on polar form specifications — sim_numbers","title":"Simulation based on polar form specifications — sim_numbers","text":"Simulate real complex numbers polar form specifications.   numbers may partially fully specified. distributions   absolute values arguments/signs specified independently.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/sim_numbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation based on polar form specifications — sim_numbers","text":"","code":"sim_numbers(type = rep(as.character(NA), length(abs)),             abs = rep(as.numeric(NA), length(type)),             sign = rep(as.numeric(NA), length(type)), values = NULL, ...)"},{"path":"https://geobosh.github.io/gbutils/reference/sim_numbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation based on polar form specifications — sim_numbers","text":"type character vector specifying types eigenvalues,     see Details. abs vector absolute values (moduli). sign vector signs (reals)  arguments (complex     numbers), see Details interpretation. values values, see details. ... additional arguments passed sim_real     sim_complex.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/sim_numbers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulation based on polar form specifications — sim_numbers","text":"sim_numbers simulates vector real complex numbers   given distributions polar parts. possible also fix   numbers one polar parts.   length simulated vector inferred length   type abs, one must   provided. sim_numbers flexible front-end   sim_real sim_complex. sim_numbers generates vector values types specified   argument type /inferred argument values.   recommended way use sim_numbers provide argument   type. type[] specifies type -th element result:   real (type[]==\"r\"), complex (type[]==\"c\")   representing complex conjugate pair (type[]==\"cp\").    values provided, imaginary parts non-NA elements   used fill NA elements type (\"r\" zero, \"cp\"   otherwise). (even ) values may fixed partially fixed   help arguments abs, sign values.   non-missing value values[] fixes -th element   result value. Simlarly abs[] fixes modulus   sign[] fixes sign/argument -th element.   values[] NA, takes precedence   abs[] sign[] ignored. real numbers sign sign possible values 1   (positive) -1 (negative). complex numbers, sign   argument interval (-pi,pi). values supplied, NA entries type   replaced \"r\" \"cp\" depending whether imaginary   parts corresponding entries values equal zero.   check done consistency type[]   values[] non-missing. Generally, values meant   used values fixed available directly Cartesian   form, avoid fill corresponding entries abs   sign. NA entries abs sign filled   simulated values, remaining entries considered fixed left   unchanged. default generator uniform (0,1) abs,   uniform (-pi,pi) argument complex values, 1 -1   p=1/2 sign real values. specify different generator moduli absolute values,   use argument absgen, giving function name   function. arguments function can specified   absarg (list). Similarly, generator arguments   complex numbers can specified arggen argarg.   Finally, probability real numbers positive given   signprob. arguments signature   function since passed directly (via \"...\")   underlying sim_complex sim_real, see   documentation examples details.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/sim_numbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation based on polar form specifications — sim_numbers","text":"list components values vector values; type numeric     values real complex otherwise. type character vector types ","code":""},{"path":"https://geobosh.github.io/gbutils/reference/sim_numbers.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simulation based on polar form specifications — sim_numbers","text":"Values type \"cp\" (complex pairs) represented one element,   complex conjugate elements generated. (todo: maybe add   argument control ) convention sign real eigenvalue 1 -1,   0 pi. checks consistency type values   complete straightforward use recommended. current defaults arguments, see signature   , require least one type abs   missing.","code":""},{"path":"https://geobosh.github.io/gbutils/reference/sim_numbers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulation based on polar form specifications — sim_numbers","text":"Georgi N. Boshnakov","code":""},{"path":[]},{"path":"https://geobosh.github.io/gbutils/reference/sim_numbers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulation based on polar form specifications — sim_numbers","text":"","code":"## one real number and one complex conjugated pair ## (maybe to specify a cubic polynomial through its roots) sim_numbers(type = c(\"r\", \"cp\")) #> $values #> [1] -0.5770768+0.0000000i  0.7122692-0.2257917i #>  #> $type #> [1] \"r\"  \"cp\" #>   ## here the real value is fixed to have modulus 1, leaving the sign unspecified sim_numbers(type = c(\"r\", \"cp\"), abs = c(1, NA)) #> $values #> [1] -1.0000000+0.0000000i -0.0102422-0.6062672i #>  #> $type #> [1] \"r\"  \"cp\" #>   ## now the real value is fixed to 1, ##     the complex pair has argument  +-pi/2, and free modulus: sim_numbers(type = c(\"r\", \"cp\"), abs = c(1, NA), sign = c(0, pi/2)) #> $values #> [1] -1+0.0000000i  0+0.8699186i #>  #> $type #> [1] \"r\"  \"cp\" #>    ## using argument 'values' to fix some values; ## here the the third value is fixed: sim_numbers(type = c(\"r\", \"cp\", \"r\"), values = c(NA,NA,3))  # type[3] = \"r\" #> $values #> [1] -0.3537113+0.0000000i -0.0487167+0.9105349i  3.0000000+0.0000000i #>  #> $type #> [1] \"r\"  \"cp\" \"r\"  #>  sim_numbers(type = c(\"r\", \"cp\", \"cp\"), values = c(NA,NA,3i)) # type[3] = \"cp\" #> $values #> [1] -0.7816976+0.000000i  0.7691238+0.572266i  0.0000000+3.000000i #>  #> $type #> [1] \"r\"  \"cp\" \"cp\" #>   ## type[3] can be left NA since it can be inferred from values[3]: sim_numbers(type = c(\"r\", \"cp\", NA), values = c(NA,NA,3))  # type[3] = \"r\" #> $values #> [1]  0.4614046+0.0000000i -0.3004746-0.2820422i  3.0000000+0.0000000i #>  #> $type #> [1] \"r\"  \"cp\" \"r\"  #>  sim_numbers(type = c(\"r\", \"cp\", NA), values = c(NA,NA,3i)) # type[3] = \"cp\" #> $values #> [1] -0.16713171+0.00000000i  0.07206492+0.00439379i  0.00000000+3.00000000i #>  #> $type #> [1] \"r\"  \"cp\" \"cp\" #>   ## it is an error to have a mismatch between args `type' and value: if (FALSE) { sim_numbers(type = c(\"r\", \"cp\", \"cp\"), values = c(NA,NA,3)) sim_numbers(type = c(\"r\", \"cp\", \"r\"), values = c(NA,NA,3i)) }  ## simulate 10 reals with the default generators sim_numbers(rep(\"r\", 10)) #> $values #>  [1] -0.867752093 -0.545504342 -0.697579602 -0.305085772 -0.616564660 #>  [6]  0.992954201 -0.004505534 -0.345446249 -0.809955764  0.113365629 #>  #> $type #>  [1] \"r\" \"r\" \"r\" \"r\" \"r\" \"r\" \"r\" \"r\" \"r\" \"r\" #>   ## simulate modulus from Rayleigh distribution ## rR <- function(n, sigma = 1) sigma * sqrt(-2*log(runif(n))) sim_numbers(type = c(\"cp\", \"cp\"), absgen = rR, absarg = list()) #> $values #> [1]  0.7839030-0.5502773i -0.4266243+0.7539855i #>  #> $type #> [1] \"cp\" \"cp\" #>   # test the the components are N(0,1) ## (not run to save time for CRAN check) ## \\dontrun{ ## v <- sim_numbers(type = rep(\"cp\", 10000), absgen = \"rR\", ##                  absarg = list(sigma = 1)) ## ks.test(Re(v$values), \"pnorm\") ## ks.test(Im(v$values), \"pnorm\") ## }"},{"path":"https://geobosh.github.io/gbutils/news/index.html","id":"gbutils-0409000","dir":"Changelog","previous_headings":"","what":"gbutils 0.4.0.9000","title":"gbutils 0.4.0.9000","text":"new function rpoly() creates polynomials real coefficients zeroes (roots) given Cartesian polar form. minor edits documentation adjacencyOfClasses().","code":""},{"path":"https://geobosh.github.io/gbutils/news/index.html","id":"gbutils-04-0-cran","dir":"Changelog","previous_headings":"","what":"gbutils 0.4-0 (CRAN)","title":"gbutils 0.4-0 (CRAN)","text":"CRAN release: 2018-10-05","code":""},{"path":"https://geobosh.github.io/gbutils/news/index.html","id":"gbutils-03-1","dir":"Changelog","previous_headings":"","what":"gbutils 0.3-1","title":"gbutils 0.3-1","text":"deal NOTE CRAN. new function pseudoInverse() (moved package mixAR). new examples converting results adjacencyOfClasses() graph objects plotting .","code":""},{"path":"https://geobosh.github.io/gbutils/news/index.html","id":"gbutils-02-4---030-cran","dir":"Changelog","previous_headings":"","what":"gbutils 0.2-4 - 0.3.0 (CRAN)","title":"gbutils 0.2-4 - 0.3.0 (CRAN)","text":"new function adjacencyOfClasses() gives graph classes defined one packages several ways. can also give Wolfram language expression can evaluated Mathematica, see help page details examples. use Rd macro \\printExample package Rdpack examples details section (see adjacencyOfClasses()).","code":""},{"path":"https://geobosh.github.io/gbutils/news/index.html","id":"gbutils-02-3","dir":"Changelog","previous_headings":"","what":"gbutils 0.2-3","title":"gbutils 0.2-3","text":"created README.*. added website created ‘pkgdown’. added github URL DESCRIPTION.","code":""},{"path":"https://geobosh.github.io/gbutils/news/index.html","id":"gbutils-02-2","dir":"Changelog","previous_headings":"","what":"gbutils 0.2-2","title":"gbutils 0.2-2","text":"corrected couple typo’s vignette.","code":""},{"path":"https://geobosh.github.io/gbutils/news/index.html","id":"gbutils-02-1-cran","dir":"Changelog","previous_headings":"","what":"gbutils 0.2-1 (CRAN)","title":"gbutils 0.2-1 (CRAN)","text":"CRAN release: 2017-10-05 New function missing_arg() returns TRUE element pairlist missing. New function plotpdf() plots probability density related functions automatically selected intervals (based cdf qf). New function cdf2quantile() numerically computes quantiles given cdf. mainly use plotpdf(). vignette illustrates plotpdf().","code":""},{"path":"https://geobosh.github.io/gbutils/news/index.html","id":"gbutils-02-0-cran","dir":"Changelog","previous_headings":"","what":"gbutils 0.2-0 (CRAN)","title":"gbutils 0.2-0 (CRAN)","text":"CRAN release: 2016-01-08 First CRAN version","code":""}]
